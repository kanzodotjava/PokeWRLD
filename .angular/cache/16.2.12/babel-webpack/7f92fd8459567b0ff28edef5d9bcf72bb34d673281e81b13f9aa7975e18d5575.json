{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let PokedexComponent = class PokedexComponent {\n  constructor(pokemonService) {\n    this.pokemonService = pokemonService;\n    this.pokemons = [];\n    this.filteredPokemons = [];\n    this.searchQuery = '';\n    this.favoriteMode = false;\n  }\n  ngOnInit() {\n    this.loadPokemons();\n  }\n  loadPokemons() {\n    this.pokemonService.getPokemons().subscribe(data => {\n      // Suponha que você obtenha os pokemons com um atributo favorite inicialmente definido como false\n      this.pokemons = data.results.map(pokemon => ({\n        ...pokemon,\n        favorite: false\n      }));\n      this.filteredPokemons = [...this.pokemons];\n    });\n  }\n  searchPokemon() {\n    this.filteredPokemons = this.pokemons.filter(pokemon => pokemon.name.toLowerCase().includes(this.searchQuery.toLowerCase()));\n  }\n  toggleFavoriteMode() {\n    if (this.favoriteMode) {\n      this.filteredPokemons = [...this.pokemons];\n    } else {\n      this.filteredPokemons = this.pokemons.filter(pokemon => pokemon.favorite);\n    }\n    this.favoriteMode = !this.favoriteMode;\n  }\n  toggleFavorite(pokemon) {\n    pokemon.favorite = !pokemon.favorite;\n    // Aqui você pode implementar a lógica para salvar as informações de favoritos em algum armazenamento persistente, como localStorage\n  }\n\n  onMouseEnter(pokemon) {\n    if (!this.favoriteMode && !pokemon.favorite) {\n      pokemon.showFavoriteButton = true;\n    }\n  }\n  onMouseLeave() {\n    this.filteredPokemons.forEach(pokemon => {\n      pokemon.showFavoriteButton = false;\n    });\n  }\n};\nPokedexComponent = __decorate([Component({\n  selector: 'app-pokedex',\n  templateUrl: './pokedex.component.html',\n  styleUrls: ['./pokedex.component.css']\n})], PokedexComponent);","map":{"version":3,"names":["Component","PokedexComponent","constructor","pokemonService","pokemons","filteredPokemons","searchQuery","favoriteMode","ngOnInit","loadPokemons","getPokemons","subscribe","data","results","map","pokemon","favorite","searchPokemon","filter","name","toLowerCase","includes","toggleFavoriteMode","toggleFavorite","onMouseEnter","showFavoriteButton","onMouseLeave","forEach","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\GROWTH\\CURSO\\CLASSES\\Angular\\PokeWRLD\\PokeWRLD\\src\\app\\Components\\pokedex\\pokedex.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { PokemonService } from '../pokemon.service';\r\n\r\n@Component({\r\n  selector: 'app-pokedex',\r\n  templateUrl: './pokedex.component.html',\r\n  styleUrls: ['./pokedex.component.css']\r\n})\r\nexport class PokedexComponent implements OnInit {\r\n  pokemons: any[] = [];\r\n  filteredPokemons: any[] = [];\r\n  searchQuery: string = '';\r\n  favoriteMode: boolean = false;\r\n\r\n  constructor(private pokemonService: PokemonService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadPokemons();\r\n  }\r\n\r\n  loadPokemons(): void {\r\n    this.pokemonService.getPokemons().subscribe((data: any) => {\r\n      // Suponha que você obtenha os pokemons com um atributo favorite inicialmente definido como false\r\n      this.pokemons = data.results.map((pokemon: any) => ({ ...pokemon, favorite: false }));\r\n      this.filteredPokemons = [...this.pokemons];\r\n    });\r\n  }\r\n\r\n  searchPokemon(): void {\r\n    this.filteredPokemons = this.pokemons.filter(pokemon =>\r\n      pokemon.name.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n    );\r\n  }\r\n\r\n  toggleFavoriteMode(): void {\r\n    if (this.favoriteMode) {\r\n      this.filteredPokemons = [...this.pokemons];\r\n    } else {\r\n      this.filteredPokemons = this.pokemons.filter(pokemon => pokemon.favorite);\r\n    }\r\n    this.favoriteMode = !this.favoriteMode;\r\n  }\r\n\r\n  toggleFavorite(pokemon: any): void {\r\n    pokemon.favorite = !pokemon.favorite;\r\n    // Aqui você pode implementar a lógica para salvar as informações de favoritos em algum armazenamento persistente, como localStorage\r\n  }\r\n\r\n  onMouseEnter(pokemon: any): void {\r\n    if (!this.favoriteMode && !pokemon.favorite) {\r\n      pokemon.showFavoriteButton = true;\r\n    }\r\n  }\r\n\r\n  onMouseLeave(): void {\r\n    this.filteredPokemons.forEach(pokemon => {\r\n      pokemon.showFavoriteButton = false;\r\n    });\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAQ1C,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAM3BC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IALlC,KAAAC,QAAQ,GAAU,EAAE;IACpB,KAAAC,gBAAgB,GAAU,EAAE;IAC5B,KAAAC,WAAW,GAAW,EAAE;IACxB,KAAAC,YAAY,GAAY,KAAK;EAEyB;EAEtDC,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAA,YAAYA,CAAA;IACV,IAAI,CAACN,cAAc,CAACO,WAAW,EAAE,CAACC,SAAS,CAAEC,IAAS,IAAI;MACxD;MACA,IAAI,CAACR,QAAQ,GAAGQ,IAAI,CAACC,OAAO,CAACC,GAAG,CAAEC,OAAY,KAAM;QAAE,GAAGA,OAAO;QAAEC,QAAQ,EAAE;MAAK,CAAE,CAAC,CAAC;MACrF,IAAI,CAACX,gBAAgB,GAAG,CAAC,GAAG,IAAI,CAACD,QAAQ,CAAC;IAC5C,CAAC,CAAC;EACJ;EAEAa,aAAaA,CAAA;IACX,IAAI,CAACZ,gBAAgB,GAAG,IAAI,CAACD,QAAQ,CAACc,MAAM,CAACH,OAAO,IAClDA,OAAO,CAACI,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACf,WAAW,CAACc,WAAW,EAAE,CAAC,CACpE;EACH;EAEAE,kBAAkBA,CAAA;IAChB,IAAI,IAAI,CAACf,YAAY,EAAE;MACrB,IAAI,CAACF,gBAAgB,GAAG,CAAC,GAAG,IAAI,CAACD,QAAQ,CAAC;KAC3C,MAAM;MACL,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACD,QAAQ,CAACc,MAAM,CAACH,OAAO,IAAIA,OAAO,CAACC,QAAQ,CAAC;;IAE3E,IAAI,CAACT,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;EACxC;EAEAgB,cAAcA,CAACR,OAAY;IACzBA,OAAO,CAACC,QAAQ,GAAG,CAACD,OAAO,CAACC,QAAQ;IACpC;EACF;;EAEAQ,YAAYA,CAACT,OAAY;IACvB,IAAI,CAAC,IAAI,CAACR,YAAY,IAAI,CAACQ,OAAO,CAACC,QAAQ,EAAE;MAC3CD,OAAO,CAACU,kBAAkB,GAAG,IAAI;;EAErC;EAEAC,YAAYA,CAAA;IACV,IAAI,CAACrB,gBAAgB,CAACsB,OAAO,CAACZ,OAAO,IAAG;MACtCA,OAAO,CAACU,kBAAkB,GAAG,KAAK;IACpC,CAAC,CAAC;EACJ;CACD;AAnDYxB,gBAAgB,GAAA2B,UAAA,EAL5B5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACW9B,gBAAgB,CAmD5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}