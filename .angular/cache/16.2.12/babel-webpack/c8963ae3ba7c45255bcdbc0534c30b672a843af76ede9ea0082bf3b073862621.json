{"ast":null,"code":"import { forkJoin } from 'rxjs';\nimport { map, mergeMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PokemonService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://pokeapi.co/api/v2/';\n  }\n  getAllPokemons() {\n    return this.http.get(`${this.baseUrl}pokemon`).pipe(map(response => response.results.map(pokemon => new pokemon(pokemon.name, pokemon.url))), mergeMap(pokemons => {\n      const pokemonRequests = pokemons.map(pokemon => {\n        return this.http.get(pokemon.url).pipe(map(pokemonDetails => {\n          pokemon.sprite = pokemonDetails.sprites.front_default;\n          return pokemon;\n        }));\n      });\n      return forkJoin(pokemonRequests);\n    }));\n  }\n  static #_ = this.ɵfac = function PokemonService_Factory(t) {\n    return new (t || PokemonService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PokemonService,\n    factory: PokemonService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["forkJoin","map","mergeMap","PokemonService","constructor","http","baseUrl","getAllPokemons","get","pipe","response","results","pokemon","name","url","pokemons","pokemonRequests","pokemonDetails","sprite","sprites","front_default","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\GROWTH\\CURSO\\CLASSES\\Angular\\PokeWRLD\\PokeWRLD\\src\\app\\Services\\pokemon.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { map, mergeMap } from 'rxjs/operators';\r\nimport { Pokemon } from '../Models/pokemon';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PokemonService {\r\n  private baseUrl = 'https://pokeapi.co/api/v2/';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllPokemons(): Observable<Pokemon[]> {\r\n    return this.http.get<any>(`${this.baseUrl}pokemon`)\r\n      .pipe(\r\n        map((response: any) => response.results.map((pokemon: any) => new pokemon(pokemon.name, pokemon.url))),\r\n        mergeMap((pokemons: Pokemon[]) => {\r\n          const pokemonRequests = pokemons.map((pokemon: Pokemon) => {\r\n            return this.http.get<any>(pokemon.url).pipe(\r\n              map((pokemonDetails: any) => {\r\n                pokemon.sprite = pokemonDetails.sprites.front_default;\r\n                return pokemon;\r\n              })\r\n            );\r\n          });\r\n          return forkJoin(pokemonRequests);\r\n        })\r\n      );\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAAqBA,QAAQ,QAAQ,MAAM;AAC3C,SAASC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;;;AAM9C,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,4BAA4B;EAEN;EAExCC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAM,GAAG,IAAI,CAACF,OAAO,SAAS,CAAC,CAChDG,IAAI,CACHR,GAAG,CAAES,QAAa,IAAKA,QAAQ,CAACC,OAAO,CAACV,GAAG,CAAEW,OAAY,IAAK,IAAIA,OAAO,CAACA,OAAO,CAACC,IAAI,EAAED,OAAO,CAACE,GAAG,CAAC,CAAC,CAAC,EACtGZ,QAAQ,CAAEa,QAAmB,IAAI;MAC/B,MAAMC,eAAe,GAAGD,QAAQ,CAACd,GAAG,CAAEW,OAAgB,IAAI;QACxD,OAAO,IAAI,CAACP,IAAI,CAACG,GAAG,CAAMI,OAAO,CAACE,GAAG,CAAC,CAACL,IAAI,CACzCR,GAAG,CAAEgB,cAAmB,IAAI;UAC1BL,OAAO,CAACM,MAAM,GAAGD,cAAc,CAACE,OAAO,CAACC,aAAa;UACrD,OAAOR,OAAO;QAChB,CAAC,CAAC,CACH;MACH,CAAC,CAAC;MACF,OAAOZ,QAAQ,CAACgB,eAAe,CAAC;IAClC,CAAC,CAAC,CACH;EACL;EAAC,QAAAK,CAAA,G;qBArBUlB,cAAc,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdvB,cAAc;IAAAwB,OAAA,EAAdxB,cAAc,CAAAyB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}