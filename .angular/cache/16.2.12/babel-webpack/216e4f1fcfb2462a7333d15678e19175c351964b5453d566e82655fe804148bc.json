{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let BattlesComponent = class BattlesComponent {\n  constructor(pokemonService) {\n    this.pokemonService = pokemonService;\n    this.pokemonA = '';\n    this.pokemonB = '';\n    this.battleResult = '';\n    this.pokemonList = [];\n    this.filteredPokemonListA = [];\n    this.filteredPokemonListB = [];\n  }\n  ngOnInit() {\n    this.pokemonService.getAllPokemons().subscribe(pokemons => {\n      this.pokemonList = pokemons;\n    });\n  }\n  filterPokemonA(query) {\n    this.filteredPokemonListA = this.filterPokemonList(query);\n  }\n  filterPokemonB(query) {\n    this.filteredPokemonListB = this.filterPokemonList(query);\n  }\n  filterPokemonList(query) {\n    if (query.trim() === '') {\n      return [];\n    }\n    return this.pokemonList.filter(pokemon => pokemon.name.toLowerCase().includes(query.toLowerCase()) || pokemon.id.toString().includes(query));\n  }\n  selectPokemonA(pokemon) {\n    this.pokemonA = pokemon.name;\n    this.filteredPokemonListA = [];\n  }\n  selectPokemonB(pokemon) {\n    this.pokemonB = pokemon.name;\n    this.filteredPokemonListB = [];\n  }\n  simulateBattle() {\n    // Simulate battle logic (e.g., coin flip)\n    const winner = Math.random() < 0.5 ? this.pokemonA : this.pokemonB;\n    this.battleResult = `${winner} wins the battle!`;\n  }\n};\nBattlesComponent = __decorate([Component({\n  selector: 'app-battles',\n  templateUrl: './battles.component.html',\n  styleUrls: ['./battles.component.css']\n})], BattlesComponent);","map":{"version":3,"names":["Component","BattlesComponent","constructor","pokemonService","pokemonA","pokemonB","battleResult","pokemonList","filteredPokemonListA","filteredPokemonListB","ngOnInit","getAllPokemons","subscribe","pokemons","filterPokemonA","query","filterPokemonList","filterPokemonB","trim","filter","pokemon","name","toLowerCase","includes","id","toString","selectPokemonA","selectPokemonB","simulateBattle","winner","Math","random","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\GROWTH\\CURSO\\CLASSES\\Angular\\PokeWRLD\\PokeWRLD\\src\\app\\Components\\battles\\battles.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { PokemonService } from '../Services/pokemon.service';\nimport { Pokemon } from '../Models/pokemon';\n\n@Component({\n  selector: 'app-battles',\n  templateUrl: './battles.component.html',\n  styleUrls: ['./battles.component.css']\n})\nexport class BattlesComponent {\n  pokemonA: string = '';\n  pokemonB: string = '';\n  battleResult: string = '';\n  pokemonList: Pokemon[] = [];\n  filteredPokemonListA: Pokemon[] = [];\n  filteredPokemonListB: Pokemon[] = [];\n\n  constructor(private pokemonService: PokemonService) { }\n\n  ngOnInit(): void {\n    this.pokemonService.getAllPokemons().subscribe(\n      (pokemons: Pokemon[]) => {\n        this.pokemonList = pokemons;\n      }\n    );\n  }\n\n  filterPokemonA(query: string): void {\n    this.filteredPokemonListA = this.filterPokemonList(query);\n  }\n\n  filterPokemonB(query: string): void {\n    this.filteredPokemonListB = this.filterPokemonList(query);\n  }\n\n  private filterPokemonList(query: string): Pokemon[] {\n    if (query.trim() === '') {\n      return [];\n    }\n    return this.pokemonList.filter(pokemon =>\n      pokemon.name.toLowerCase().includes(query.toLowerCase()) ||\n      pokemon.id.toString().includes(query)\n    );\n  }\n\n  selectPokemonA(pokemon: Pokemon): void {\n    this.pokemonA = pokemon.name;\n    this.filteredPokemonListA = [];\n  }\n\n  selectPokemonB(pokemon: Pokemon): void {\n    this.pokemonB = pokemon.name;\n    this.filteredPokemonListB = [];\n  }\n\n  simulateBattle(): void {\n    // Simulate battle logic (e.g., coin flip)\n    const winner = Math.random() < 0.5 ? this.pokemonA : this.pokemonB;\n    this.battleResult = `${winner} wins the battle!`;\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAQ3BC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAPlC,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,YAAY,GAAW,EAAE;IACzB,KAAAC,WAAW,GAAc,EAAE;IAC3B,KAAAC,oBAAoB,GAAc,EAAE;IACpC,KAAAC,oBAAoB,GAAc,EAAE;EAEkB;EAEtDC,QAAQA,CAAA;IACN,IAAI,CAACP,cAAc,CAACQ,cAAc,EAAE,CAACC,SAAS,CAC3CC,QAAmB,IAAI;MACtB,IAAI,CAACN,WAAW,GAAGM,QAAQ;IAC7B,CAAC,CACF;EACH;EAEAC,cAAcA,CAACC,KAAa;IAC1B,IAAI,CAACP,oBAAoB,GAAG,IAAI,CAACQ,iBAAiB,CAACD,KAAK,CAAC;EAC3D;EAEAE,cAAcA,CAACF,KAAa;IAC1B,IAAI,CAACN,oBAAoB,GAAG,IAAI,CAACO,iBAAiB,CAACD,KAAK,CAAC;EAC3D;EAEQC,iBAAiBA,CAACD,KAAa;IACrC,IAAIA,KAAK,CAACG,IAAI,EAAE,KAAK,EAAE,EAAE;MACvB,OAAO,EAAE;;IAEX,OAAO,IAAI,CAACX,WAAW,CAACY,MAAM,CAACC,OAAO,IACpCA,OAAO,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACR,KAAK,CAACO,WAAW,EAAE,CAAC,IACxDF,OAAO,CAACI,EAAE,CAACC,QAAQ,EAAE,CAACF,QAAQ,CAACR,KAAK,CAAC,CACtC;EACH;EAEAW,cAAcA,CAACN,OAAgB;IAC7B,IAAI,CAAChB,QAAQ,GAAGgB,OAAO,CAACC,IAAI;IAC5B,IAAI,CAACb,oBAAoB,GAAG,EAAE;EAChC;EAEAmB,cAAcA,CAACP,OAAgB;IAC7B,IAAI,CAACf,QAAQ,GAAGe,OAAO,CAACC,IAAI;IAC5B,IAAI,CAACZ,oBAAoB,GAAG,EAAE;EAChC;EAEAmB,cAAcA,CAAA;IACZ;IACA,MAAMC,MAAM,GAAGC,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC3B,QAAQ,GAAG,IAAI,CAACC,QAAQ;IAClE,IAAI,CAACC,YAAY,GAAG,GAAGuB,MAAM,mBAAmB;EAClD;CACD;AAnDY5B,gBAAgB,GAAA+B,UAAA,EAL5BhC,SAAS,CAAC;EACTiC,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWlC,gBAAgB,CAmD5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}