{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let PokedexComponent = class PokedexComponent {\n  constructor(router, pokemonService) {\n    this.router = router;\n    this.pokemonService = pokemonService;\n    this.pokemons = [];\n    this.filteredPokemons = [];\n    this.searchQuery = '';\n    this.showFavorites = false;\n    this.favoritePokemons = [];\n    this.currentPage = 1;\n    this.itemsPerPage = 32;\n  }\n  loadDashboard() {\n    this.router.navigate(['/dashboard']);\n  }\n  ngOnInit() {\n    this.pokemonService.getAllPokemons().subscribe(pokemons => {\n      this.pokemons = pokemons;\n      this.filteredPokemons = pokemons;\n    });\n    this.loadFavorites();\n  }\n  searchPokemon() {\n    console.log(\"SQ \" + this.searchQuery);\n    if (!this.searchQuery.trim()) {\n      this.filteredPokemons = this.pokemons;\n      return;\n    }\n    const searchResult = this.pokemons.filter(pokemon => pokemon.name.toLowerCase().includes(this.searchQuery.toLowerCase()) || pokemon.id.toString().includes(this.searchQuery));\n    this.filteredPokemons = searchResult;\n    return;\n  }\n  getPokemonImage(id) {\n    return this.pokemonService.getPokemonImage(id);\n  }\n  toggleFavoritesMode() {\n    if (this.showFavorites) {\n      this.filteredPokemons = [...this.pokemons];\n    } else {\n      this.filteredPokemons = this.pokemons.filter(pokemon => pokemon.favorite);\n    }\n    this.showFavorites = !this.showFavorites;\n  }\n  onMouseEnter(pokemon) {\n    if (!this.showFavorites && !pokemon.favorite) {\n      pokemon.showFavoriteButton = true;\n    }\n  }\n  onMouseLeave() {\n    this.filteredPokemons.forEach(pokemon => {\n      pokemon.showFavoriteButton = false;\n    });\n  }\n  addToFavorites(pokemon) {\n    this.pokemonService.addToFavorites(pokemon);\n    this.favoritePokemons = this.pokemonService.getAllFavorites();\n  }\n  removeFromFavorites(pokemon) {\n    this.pokemonService.removeFromFavorites(pokemon);\n    this.favoritePokemons = this.pokemonService.getAllFavorites();\n  }\n  viewPokemonDetails(pokemonId) {\n    this.router.navigate(['/pokemon', pokemonId]);\n  }\n  loadFavorites() {\n    this.favoritePokemons = this.pokemonService.getAllFavorites();\n  }\n  nextPage() {\n    this.currentPage++;\n  }\n  prevPage() {\n    if (this.currentPage > 1) {\n      this.currentPage--;\n    }\n  }\n  getPageItems() {\n    const startIndex = (this.currentPage - 1) * this.itemsPerPage;\n    return this.pokemons.slice(startIndex, startIndex + this.itemsPerPage);\n  }\n};\nPokedexComponent = __decorate([Component({\n  selector: 'app-pokedex',\n  templateUrl: './pokedex.component.html',\n  styleUrls: ['./pokedex.component.css']\n})], PokedexComponent);","map":{"version":3,"names":["Component","PokedexComponent","constructor","router","pokemonService","pokemons","filteredPokemons","searchQuery","showFavorites","favoritePokemons","currentPage","itemsPerPage","loadDashboard","navigate","ngOnInit","getAllPokemons","subscribe","loadFavorites","searchPokemon","console","log","trim","searchResult","filter","pokemon","name","toLowerCase","includes","id","toString","getPokemonImage","toggleFavoritesMode","favorite","onMouseEnter","showFavoriteButton","onMouseLeave","forEach","addToFavorites","getAllFavorites","removeFromFavorites","viewPokemonDetails","pokemonId","nextPage","prevPage","getPageItems","startIndex","slice","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\GROWTH\\CURSO\\CLASSES\\Angular\\PokeWRLD\\PokeWRLD\\src\\app\\Components\\pokedex\\pokedex.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PokemonService } from '../../Services/pokemon.service';\r\nimport { Pokemon } from '../../Models/pokemon';\r\n\r\n@Component({\r\n  selector: 'app-pokedex',\r\n  templateUrl: './pokedex.component.html',\r\n  styleUrls: ['./pokedex.component.css']\r\n})\r\nexport class PokedexComponent implements OnInit {\r\n  pokemons: Pokemon[] = [];\r\n  filteredPokemons: Pokemon[] = [];\r\n  searchQuery: string = '';\r\n  showFavorites: boolean = false;\r\n  favoritePokemons: Pokemon[] = [];\r\n  currentPage: number = 1;\r\n  itemsPerPage: number = 32;\r\n\r\n  constructor(private router: Router, private pokemonService: PokemonService) { }\r\n\r\n  loadDashboard() {\r\n    this.router.navigate(['/dashboard']);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.pokemonService.getAllPokemons().subscribe(\r\n      (pokemons: Pokemon[]) => {\r\n        this.pokemons = pokemons;\r\n        this.filteredPokemons = pokemons;\r\n      }\r\n    );\r\n    this.loadFavorites();\r\n\r\n\r\n  }\r\n  \r\n  searchPokemon() {\r\n    console.log(\"SQ \" + this.searchQuery);\r\n    if (!this.searchQuery.trim()) {\r\n      this.filteredPokemons = this.pokemons;\r\n      return;\r\n    }\r\n\r\n    const searchResult = this.pokemons.filter(pokemon =>\r\n      pokemon.name.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n      pokemon.id.toString().includes(this.searchQuery)\r\n    );\r\n\r\n    this.filteredPokemons = searchResult;\r\n    return;\r\n  }\r\n\r\n  getPokemonImage(id: number): string {\r\n    return this.pokemonService.getPokemonImage(id);\r\n  }\r\n\r\n  toggleFavoritesMode(): void {\r\n    if (this.showFavorites) {\r\n      this.filteredPokemons = [...this.pokemons];\r\n    } else {\r\n      this.filteredPokemons = this.pokemons.filter(pokemon => pokemon.favorite);\r\n    }\r\n    this.showFavorites = !this.showFavorites;\r\n  }\r\n\r\n  onMouseEnter(pokemon: any): void {\r\n    if (!this.showFavorites && !pokemon.favorite) {\r\n      pokemon.showFavoriteButton = true;\r\n    }\r\n  }\r\n\r\n  onMouseLeave(): void {\r\n    this.filteredPokemons.forEach(pokemon => {\r\n      pokemon.showFavoriteButton = false;\r\n    });\r\n  }\r\n\r\n  addToFavorites(pokemon: Pokemon) {\r\n    this.pokemonService.addToFavorites(pokemon);\r\n    this.favoritePokemons = this.pokemonService.getAllFavorites();\r\n  }\r\n\r\n  removeFromFavorites(pokemon: Pokemon) {\r\n    this.pokemonService.removeFromFavorites(pokemon);\r\n    this.favoritePokemons = this.pokemonService.getAllFavorites();\r\n  }\r\n  \r\n  viewPokemonDetails(pokemonId: number): void {\r\n    this.router.navigate(['/pokemon', pokemonId]);\r\n  }\r\n\r\n  loadFavorites() {\r\n    this.favoritePokemons = this.pokemonService.getAllFavorites();\r\n  }\r\n\r\n  nextPage(): void {\r\n    this.currentPage++;\r\n  }\r\n\r\n  prevPage(): void {\r\n    if (this.currentPage > 1) {\r\n      this.currentPage--;\r\n    }\r\n  }\r\n\r\n  getPageItems(): Pokemon[] {\r\n    const startIndex = (this.currentPage - 1) * this.itemsPerPage;\r\n    return this.pokemons.slice(startIndex, startIndex + this.itemsPerPage);\r\n  }\r\n\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}