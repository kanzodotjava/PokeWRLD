{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class HttpsInterceptor {\n  intercept(req, next) {\n    // Clone the request and modify it to use HTTPS\n    const secureReq = req.clone({\n      url: req.url.replace('http://', 'https://')\n    });\n    // Pass the modified request to the next handler\n    return next.handle(secureReq);\n  }\n  static #_ = this.ɵfac = function HttpsInterceptor_Factory(t) {\n    return new (t || HttpsInterceptor)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HttpsInterceptor,\n    factory: HttpsInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["HttpsInterceptor","intercept","req","next","secureReq","clone","url","replace","handle","_","_2","factory","ɵfac"],"sources":["C:\\Users\\GROWTH\\CURSO\\CLASSES\\Angular\\PokeWRLD\\PokeWRLD\\src\\app\\Interceptors\\http.interceptor.ts"],"sourcesContent":["// https-interceptor.ts\n\nimport { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpEvent,\n  HttpRequest,\n  HttpHandler\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class HttpsInterceptor implements HttpInterceptor {\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    // Clone the request and modify it to use HTTPS\n    const secureReq = req.clone({\n      url: req.url.replace('http://', 'https://')\n    });\n\n    // Pass the modified request to the next handler\n    return next.handle(secureReq);\n  }\n}\n"],"mappings":";AAYA,OAAM,MAAOA,gBAAgB;EAC3BC,SAASA,CACPC,GAAqB,EACrBC,IAAiB;IAEjB;IACA,MAAMC,SAAS,GAAGF,GAAG,CAACG,KAAK,CAAC;MAC1BC,GAAG,EAAEJ,GAAG,CAACI,GAAG,CAACC,OAAO,CAAC,SAAS,EAAE,UAAU;KAC3C,CAAC;IAEF;IACA,OAAOJ,IAAI,CAACK,MAAM,CAACJ,SAAS,CAAC;EAC/B;EAAC,QAAAK,CAAA,G;qBAZUT,gBAAgB;EAAA;EAAA,QAAAU,EAAA,G;WAAhBV,gBAAgB;IAAAW,OAAA,EAAhBX,gBAAgB,CAAAY;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}