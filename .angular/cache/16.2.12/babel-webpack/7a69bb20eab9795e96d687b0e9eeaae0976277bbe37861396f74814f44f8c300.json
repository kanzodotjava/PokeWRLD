{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let PokemonService = /*#__PURE__*/(() => {\n  class PokemonService {\n    constructor(http) {\n      this.http = http;\n      this.url = 'https://softwium.com/api/pokemons';\n      this.favoritesKey = 'favoritePokemons';\n    }\n    getAllPokemons() {\n      return this.http.get(this.url).pipe(map(pokemons => {\n        const uniquePokemons = pokemons.filter((pokemon, index, self) => index === self.findIndex(p => p.id === pokemon.id));\n        return uniquePokemons.slice(0, 500);\n      }));\n    }\n    getPokemonImage(id) {\n      return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`;\n    }\n    getPokemonById(id) {\n      return this.http.get(`${this.url}/${id}`);\n    }\n    getAllFavorites() {\n      const favoritesJson = localStorage.getItem(this.favoritesKey);\n      return favoritesJson ? JSON.parse(favoritesJson) : [];\n    }\n    saveFavorites(favorites) {\n      localStorage.setItem(this.favoritesKey, JSON.stringify(favorites));\n    }\n    getFavorites() {\n      return this.http.get(this.url).pipe(map(pokemons => {\n        const favorites = this.getAllFavorites();\n        pokemons.forEach(pokemon => {\n          pokemon.favorite = favorites.some(favorite => favorite.id === pokemon.id);\n        });\n        return pokemons;\n      }));\n    }\n    addToFavorites(pokemon) {\n      let favorites = this.getAllFavorites();\n      if (!favorites.some(p => p.id === pokemon.id)) {\n        favorites.push(pokemon);\n        this.saveFavorites(favorites);\n      }\n    }\n    removeFromFavorites(pokemon) {\n      let favorites = this.getAllFavorites().filter(p => p.id !== pokemon.id);\n      this.saveFavorites(favorites);\n    }\n    static #_ = this.ɵfac = function PokemonService_Factory(t) {\n      return new (t || PokemonService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PokemonService,\n      factory: PokemonService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return PokemonService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}